{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"strin",
				"string_ptr"
			],
			[
				"null",
				"nullptr"
			],
			[
				"close",
				"closeLuaState"
			],
			[
				"lua_get",
				"lua_getdefault"
			],
			[
				"lual",
				"luaL_openlibs"
			],
			[
				"end",
				"endl"
			],
			[
				"std",
				"std::cout"
			],
			[
				"stat",
				"state"
			],
			[
				"fun",
				"function"
			],
			[
				"def",
				"def	#ifndef … #define … #endif"
			],
			[
				"se",
				"sel::State"
			],
			[
				"cre",
				"createEntityID"
			],
			[
				"scr",
				"scripts"
			],
			[
				"LUA",
				"LUA_INCLUDE"
			],
			[
				"Vec",
				"Vec2"
			],
			[
				"ret",
				"return"
			],
			[
				"new",
				"newVec2"
			],
			[
				"luaop",
				"luaopen_example"
			],
			[
				"player",
				"playerImgPath"
			],
			[
				"move",
				"moveCS"
			],
			[
				"fram",
				"frames"
			],
			[
				"curr",
				"currentAnimation"
			],
			[
				"Wind",
				"Window"
			],
			[
				"Time",
				"Timer::frame"
			],
			[
				"curre",
				"currentAnimation"
			],
			[
				"pla",
				"played"
			],
			[
				"mov",
				"moveable"
			],
			[
				"sprit",
				"spriteCS"
			],
			[
				"text",
				"textures"
			],
			[
				"sh",
				"shared_ptr"
			],
			[
				"dele",
				"delete"
			],
			[
				"over",
				"overlapingWith"
			],
			[
				"pos",
				"postUpdate"
			],
			[
				"delet",
				"delete"
			],
			[
				"coll",
				"collisionCS"
			],
			[
				"SDL_KEY",
				"SDL_KEYUP"
			],
			[
				"Curre",
				"currentFrame"
			],
			[
				"reset",
				"resetVel"
			],
			[
				"movem",
				"movement"
			],
			[
				"st",
				"std::cout"
			],
			[
				"spri",
				"spriteC"
			],
			[
				"ve",
				"vel"
			],
			[
				"MO",
				"MoveComponent"
			],
			[
				"edg",
				"edgeCheckerUpdate"
			],
			[
				"ove",
				"overlaped"
			],
			[
				"overla",
				"overlaped"
			],
			[
				"grou",
				"groups"
			],
			[
				"collided",
				"collided"
			],
			[
				"typ",
				"typeinfo"
			],
			[
				"Func",
				"FuncQComponent"
			],
			[
				"Prop",
				"PropertiesComponent"
			],
			[
				"hold",
				"holdFace"
			],
			[
				"hodl",
				"holdFace"
			],
			[
				"hol",
				"holdFace"
			],
			[
				"bool",
				"boolProps"
			],
			[
				"Sprite",
				"SpriteComponent"
			],
			[
				"shoo",
				"shootTimer"
			],
			[
				"he",
				"height"
			],
			[
				"mo",
				"moveCS"
			],
			[
				"collisio",
				"collision"
			],
			[
				"collis",
				"collisionCS"
			],
			[
				"col",
				"collisionCS"
			],
			[
				"coli",
				"collided"
			],
			[
				"updat",
				"updatePosition"
			],
			[
				"fla",
				"false"
			],
			[
				"fa",
				"false"
			],
			[
				"sho",
				"shooting"
			],
			[
				"stin",
				"stringProps"
			],
			[
				"fist",
				"firstColl"
			],
			[
				"string",
				"std::string"
			],
			[
				"max",
				"maxAreaID"
			],
			[
				"collid",
				"collidedWith"
			],
			[
				"che",
				"checking"
			],
			[
				"set",
				"setScale"
			],
			[
				"collide",
				"collided"
			],
			[
				"f",
				"fProps"
			],
			[
				"pro",
				"propCS"
			],
			[
				"el",
				"elapsed"
			],
			[
				"spr",
				"spriteCS"
			],
			[
				"bu",
				"bulletUpdate"
			],
			[
				"playe",
				"playerUpdate"
			],
			[
				"spi",
				"spriteCS"
			],
			[
				"Fun",
				"FuncQComponent"
			],
			[
				"Ev",
				"SDL_Event"
			],
			[
				"vec",
				"vector	std::vector"
			],
			[
				"fol",
				"followE"
			],
			[
				"cure",
				"currentAnimation"
			],
			[
				"frame",
				"frames"
			],
			[
				"functio",
				"functions"
			],
			[
				"CAme",
				"Camera"
			],
			[
				"win",
				"winSize"
			],
			[
				"foll",
				"follow"
			],
			[
				"came",
				"cameras"
			],
			[
				"foo",
				"followC"
			],
			[
				"Came",
				"Camera"
			],
			[
				"follo",
				"followC"
			],
			[
				"game",
				"gamePos"
			],
			[
				"fl",
				"SDL_FLIP_HORIZONTAL"
			],
			[
				"fli",
				"SDL_FLIP_NONE"
			],
			[
				"clip",
				"clipRect"
			],
			[
				"SDL_fl",
				"SDL_FLIP_HORIZONTAL"
			],
			[
				"area",
				"area"
			],
			[
				"are",
				"area"
			],
			[
				"SDL_I",
				"SDL_IntersectRect"
			],
			[
				"creat",
				"createID"
			],
			[
				"crea",
				"createCamera"
			],
			[
				"Move",
				"MoveComponent"
			],
			[
				"img",
				"imgRect"
			],
			[
				"collision",
				"collisionCS"
			],
			[
				"maxv",
				"maxV"
			],
			[
				"SDL_",
				"SDL_FLIP_NONE"
			],
			[
				"SDL_RE",
				"SDL_Rect"
			],
			[
				"maxare",
				"maxAreaID"
			],
			[
				"maxar",
				"maxAreaID"
			],
			[
				"maxid",
				"maxAreaID"
			],
			[
				"maxAre",
				"maxArea"
			],
			[
				"colid",
				"collidingWith"
			],
			[
				"moc",
				"moveC"
			],
			[
				"dx",
				"dx2"
			],
			[
				"dy",
				"dy2"
			],
			[
				"ac",
				"acc"
			],
			[
				"maxa",
				"maxArea"
			],
			[
				"colli",
				"collided"
			],
			[
				"moce",
				"moveCS"
			],
			[
				"flo",
				"float"
			],
			[
				"abs",
				"absDX2"
			],
			[
				"ab",
				"absDX1"
			],
			[
				"abd",
				"absDY2"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/myMake.sublime-build",
			"settings":
			{
				"buffer_size": 626,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 1508,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n#include <stdexcept>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <chrono>\n\n#include <SDL2/SDL.h>\n#include <SDL2/SDL.h>\n#include \"../include/window.h\"\n#include \"../include/cleanup.h\"\n#include \"../include/CS.h\"\n#include \"../include/system.h\"\n#include \"../include/entities.h\"\n\n\n\nusing namespace std;\n\n\nint main(int argc, char **argv){\n	try {\n		Window::Init(\"ASDF\");\n	}\n	catch (const std::runtime_error &e){\n		std::cout << e.what() << std::endl;\n		Window::Quit();\n		return -1;\n	}\n	SDL_Event e;\n	bool quit=false;\n	int controll = 1;\n	// SDL_Rect r;\n	// SDL_Texture* t;\n	// t = Window::RenderText(\"FPS: \" + std::to_string(1000/Timer::elapsed), \"../data/fonts/PressSTart2P.ttf\",{255,255,255,255}, 8);\n	// SDL_QueryTexture(t, nullptr, nullptr, &r.w, &r.h);\n	// r.x=1;r.y=1;\n	eId c = createCamera(0,0);\n	//eId c2 = createCamera(400,300);\n	while(!quit){\n		\n		auto timePoint1(chrono::high_resolution_clock::now());\n\n		while (SDL_PollEvent(&e)){\n			if (e.type == SDL_QUIT)\n				quit = true;\n			if(e.type == SDL_MOUSEWHEEL){\n				CS::cameras[c]->zoom += 0.05*e.wheel.y;\n			}\n			if(e.type == SDL_MOUSEBUTTONDOWN){\n				if(e.button.button == SDL_BUTTON_LEFT){\n					Vec2 p = CS::cameras[c]->getWorldPos({e.button.x, e.button.y});\n					mBox(p.x, p.y);\n				}\n				if(e.button.button == SDL_BUTTON_RIGHT){\n					if(controll < 0)\n							ENEMY(CS::cameras[c]->getWorldPos({e.button.x, e.button.y}));\n					else\n						CS::cameras[c]->follow(\n							TEST(CS::cameras[c]->getWorldPos({e.button.x, e.button.y})));\n				}\n				\n			}\n			if(e.type == SDL_MOUSEBUTTONUP){\n			}\n			if (e.type == SDL_KEYDOWN){\n				switch(e.key.keysym.sym){\n					case SDLK_ESCAPE:\n						quit = true;break;\n				}\n			}\n			if (e.type == SDL_KEYUP){\n				switch(e.key.keysym.sym){\n					case SDLK_e:\n						controll *= -1;\n						break;\n					case SDLK_r:\n						CS::clear();\n						c = createCamera(0,0);\n						break;\n				}\n			}\n\n			CS::eventUpdate(e);\n		}\n		//if(rand()%10 > 5)\n		//mBox(rand()%800, rand()%600);\n		// std::cout << CS::_E_INDEX << std::endl;\n		Timer::slice += Timer::elapsed;\n		Window::Clear();\n		for(; Timer::slice >= Timer::frame; Timer::slice -= Timer::frame)\n		{\n			CS::update();\n			//CS::collisionUpdate();\n		}\n		//Window::Draw(t, r);\n		CS::draw();\n		Window::Present();\n		auto timePoint2(chrono::high_resolution_clock::now());\n		auto elaspedTime(timePoint2 - timePoint1);\n\n		Timer::elapsed = chrono::duration_cast<\n			chrono::duration<float, milli>>(elaspedTime).count();\n		// std::cout << (1000.f/ft) << std::endl;\n		// if(Timer::elapsed > maxTime){\n		// 	int loops = Timer::elapsed/maxTime;\n		// 	for(int i=0;i<loops;i++){\n		// 		CS::update();\n		// 	}\n		// } else {3\n		// 	SDL_Delay(delay);\n		// }r\n	}\n	Window::Quit();\n	return 0;\n}",
			"file": "src/main.cpp",
			"file_size": 3046,
			"file_write_time": 130581467336403820,
			"settings":
			{
				"buffer_size": 2709,
				"line_ending": "Windows"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 751,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/entities.cpp",
			"settings":
			{
				"buffer_size": 11325,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/components.cpp",
			"settings":
			{
				"buffer_size": 10035,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/CS.cpp",
			"settings":
			{
				"buffer_size": 5189,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/system.cpp",
			"settings":
			{
				"buffer_size": 10475,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/window.cpp",
			"settings":
			{
				"buffer_size": 3379,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/entities.h",
			"settings":
			{
				"buffer_size": 320,
				"line_ending": "Windows",
				"name": "#ifndef ENTITIES_H"
			}
		},
		{
			"file": "include/window.h",
			"settings":
			{
				"buffer_size": 2826,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/system.h",
			"settings":
			{
				"buffer_size": 1405,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/CS.h",
			"settings":
			{
				"buffer_size": 1563,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/components.h",
			"settings":
			{
				"buffer_size": 3744,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/myMake.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"clea",
				"Build: Clean"
			],
			[
				"32",
				"Build: Run32"
			],
			[
				"",
				"About"
			],
			[
				"buid",
				"Build: build32"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"pa",
				"Package Control: Remove Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"pac",
				"Package Control: Enable Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"cle",
				"Build: Clean"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"clean",
				"Build: Clean"
			]
		],
		"width": 652.0
	},
	"console":
	{
		"height": 371.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/dev/SDLTEST",
		"/C/dev/SDLTEST/bin",
		"/C/dev/SDLTEST/data",
		"/C/dev/SDLTEST/include",
		"/C/dev/SDLTEST/obj",
		"/C/dev/SDLTEST/obj32",
		"/C/dev/SDLTEST/scripts",
		"/C/dev/SDLTEST/src",
		"/C/dev/SDLTEST/trash"
	],
	"file_history":
	[
		"/C/dev/SDLTEST/scripts/myscript.sgs",
		"/C/dev/SDLTEST/include/luaState.h",
		"/C/Users/Omar/Desktop/SFMLTEST/src/system.cpp",
		"/C/dev/SDLTEST/src/main.cpp",
		"/C/sgscript/README.md",
		"/C/dev/SDLTEST/scripts/vars.lua",
		"/C/dev/SDLTEST/src/luaState.cpp",
		"/C/dev/SDLTEST/trash/luatest.cpp",
		"/C/dev/SDLTEST/include/selene/primitives.h",
		"/C/tolua-5.2.0/INSTALL",
		"/C/MinGW/msys/1.0/home/Omar/luna-gen/README",
		"/C/MinGW/msys/1.0/home/Omar/luna-gen/examples/README",
		"/C/tolua-5.2.0/README",
		"/C/dev/SDLTEST/include/luascript.h",
		"/C/dev/SDLTEST/src/luascript.cpp",
		"/C/dev/SDLTEST/src/luatest.cpp",
		"/C/Users/Omar/LuaState-master/README.md",
		"/C/Users/Omar/LuaState-master/test/main.cpp",
		"/C/Users/Omar/LuaState-master/test/get_test.cpp",
		"/C/Users/Omar/LuaState-master/test/test.h",
		"/C/dev/SDLTEST/src/example.cpp",
		"/C/dev/SDLTEST/src/example_wrap.cxx",
		"/C/dev/SDLTEST/src/example.i",
		"/C/dev/SDLTEST/include/example.h",
		"/C/Users/Omar/AppData/Local/Temp/7zE9D03.tmp/README",
		"/C/Users/Omar/AppData/Local/Temp/7zEF981.tmp/luawrapperutil.hpp",
		"/C/lua-5.2.3/src/luac.c",
		"/C/dev/SDLTEST/src/min.c",
		"/C/dev/SDLTEST/src/DELETED.txt",
		"/C/test.cpp",
		"/C/dev/SDLTEST/include/typedefs.h",
		"/C/dev/SDLTEST/Makefile",
		"/C/dev/SDLTEST/README.md",
		"/C/dev/SDLTEST/src/CS.cpp",
		"/Users/slouken/release/SDL/SDL2-2.0.3-source/src/main/windows/SDL_windows_main.c",
		"/C/dev/SDLTEST/5b408044-22d4-46d4-b960-9fe790b6acb4.dmp",
		"/C/dev/SDLTEST/bin/terminal.glue",
		"/C/dev/SDLTEST/data/player.png",
		"/C/dev/SDLTEST/include/cleanup.h",
		"/C/dev/SDLTEST/src/54dab505-fca9-4088-864e-1d5afaeb74ef.dmp",
		"/C/dev/SDLTEST/project.sublime-project",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/JSON.sublime-settings",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/C/Users/Omar/Desktop/SFMLTEST/src/components.hpp",
		"/C/Users/Omar/Desktop/SFMLTEST/deleted",
		"/C/dev/SDLTEST/data/fonts/FONTLOG.txt",
		"/C/dev/SDLTEST/bin/LICENSE.tiff.txt",
		"/C/Users/Omar/Desktop/SFMLTEST/src/game.cpp",
		"/C/Users/Omar/Desktop/SFMLTEST/src/deleted controls code in update().txt",
		"/C/Users/Omar/Desktop/smart sweepers - v1.0/main.cpp",
		"/C/Users/Omar/Desktop/smart sweepers - v1.0/CMinesweeper.cpp",
		"/C/Users/Omar/Desktop/smart sweepers - v1.0/Script1.aps",
		"/C/Users/Omar/Desktop/smart sweepers - v1.0/Script1.rc",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/C++.sublime-settings",
		"/C/dev/SDLTEST/20e9789b-f58a-439b-8b8d-3411319382ce.dmp",
		"/C/dev/SDLTEST/fd8ca7fb-a8dc-40e7-9764-a500df7a3066.dmp",
		"/C/dev/SDLTEST/src/game.cpp",
		"/C/dev/SDLTEST/include/system.h",
		"/C/dev/SDLTEST/data/hello.png",
		"/C/dev/SDLTEST/bin/LICENSE.jpeg.txt",
		"/C/dev/SDLTEST/data/gameover.bmp",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/myMake.sublime-build",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/Makefile/Make.sublime-build",
		"/C/Program Files (x86)/Sublime Text 2/Pristine Packages/Makefile.sublime-package",
		"/C/Program Files/Sublime Text 3/Packages/Makefile.sublime-package",
		"/C/dev/SDLTEST/src/window.cpp",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/clang_format_custom.sublime-settings",
		"/C/dev/SDLTEST/include/window.h",
		"/C/dev/SDLTEST/src/DELETED.cpp",
		"/C/dev/SDLTEST/include/game.h",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/User/myMake.sublime-build",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/User/mingw32-make.sublime-build",
		"/C/dev/SDLTEST/src/game.h",
		"/C/dev/SDLTEST/src/cleanup.h",
		"/C/dev/SDLTEST/src/window.h",
		"/C/dev/SDLTEST/src/Makefile",
		"/C/mathart.cpp",
		"/C/MathPic.ppm",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/User/Distraction Free.sublime-settings",
		"/C/Users/Omar/Desktop/SFMLTEST/main.cpp",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/User/SFML2_C++.sublime-build",
		"/C/Users/Omar/myApp/game.js",
		"/C/Users/Omar/Desktop/SFMLTEST/build&run.bat",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/C++/C++.sublime-build",
		"/C/Users/Omar/Desktop/SFMLTEST/compile.sh",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/User/clangSFML.sublime-build",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/C++/old_C++.sublime-build",
		"/C/Users/Omar/Desktop/EULER/P18.py",
		"/C/Users/Omar/Desktop/P18.py",
		"/C/Users/Omar/Desktop/htmlTest/test.html",
		"/C/Users/Omar/Desktop/htmlTest/scripts/app.js",
		"/C/Users/Omar/Desktop/craftyTest.html"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\dev\\SDLTEST\\src",
			"C:\\dev\\SDLTEST\\include",
			"C:\\dev\\SDLTEST\\src",
			"C:\\dev\\SDLTEST\\bin"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"true",
			"o",
			"O",
			"o",
			"O",
			")\n",
			"h",
			"CS::moveCS",
			"new FuncQComponent(id)",
			"new PropertiesComponent(id);",
			"new SpriteComponent(",
			"new SpriteComponent(\"../data/hello.png\", CS::moveCS, id)",
			"MoveComponent*",
			"SpriteComponent*",
			"MoveComponent*",
			"new CollisionComponent(",
			"new MoveComponent(",
			"*",
			"&",
			".erase(id)",
			"setc",
			"spriteCS",
			"moveCS[id]",
			"timer",
			"el",
			"elaps",
			"moveC",
			"funcQ",
			"funcQS",
			"Vec2<float>",
			"imgRect",
			"{\n",
			"x",
			"w",
			"x",
			"_INDEX",
			"x",
			"BIAS",
			"width",
			"rect",
			"acc",
			"collidingWith",
			"2",
			"x",
			"1",
			"c1->moveC->pos.x > c1->moveC->deltaPos.x",
			"maxV",
			"rect.",
			"w",
			"x",
			"spee",
			"gridH",
			"gridW",
			"gridY",
			"gridX",
			"it",
			"x",
			"w",
			"x",
			"1",
			"auto",
			"x",
			"depth < maxDepth",
			"QTs.size() > 0",
			"int",
			"r.",
			"Vec2<float>",
			"maxVel",
			"maxVel.y",
			"maxVel.x",
			"%10",
			"x",
			"->vec",
			"vec",
			"->x",
			"->y",
			"vx",
			"vy",
			"CSys",
			"test",
			"CSys::moveCS[test]",
			"[1]",
			"1",
			".map",
			"map",
			"1",
			"game.exe"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"moveCS",
			"std::shared_ptr<FuncQComponent>(new FuncQComponent(id));",
			"std::shared_ptr<PropertiesComponent>(new PropertiesComponent(id));",
			"std::shared_ptr<SpriteComponent>(",
			"std::shared_ptr<SpriteComponent>(new SpriteComponent(\"../data/hello.png\", CS::moveCS, id))",
			"std::shared_ptr<MoveComponent>",
			"std::shared_ptr<SpriteComponent>",
			"std::shared_ptr<MoveComponent>",
			"std::shared_ptr<CollisionComponent>(new CollisionComponent(",
			"std::shared_ptr<MoveComponent>(new MoveComponent(",
			">",
			"[id]",
			"COMP[moveC][id]",
			"CS::moveCS[id]",
			"Vec2",
			"result",
			"y",
			"h",
			"y",
			"_E_INDEX",
			"y",
			"w",
			"r",
			"vel",
			"1",
			"y",
			"2",
			"Xincreased",
			"moveC->pos.",
			"h",
			"y",
			"bounds.h",
			"bounds.w",
			"bounds.y",
			"bounds.x",
			"checking",
			"y",
			"h",
			"yh",
			"y",
			"2",
			"it-first",
			"unsigned int",
			"y",
			"QTs[0] != nullptr",
			"unsigned int",
			"auto",
			"r->",
			"Vec2f",
			"maxV",
			"mVy",
			"mVx",
			"/RAND_MAX",
			"y",
			"->vel",
			"vel",
			"->pos.x",
			"->pos.y",
			"vec.x",
			"vec.y",
			"CS",
			"id",
			"moveC",
			"[test]",
			"",
			"SPEED"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/myMake.sublime-build",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 626,
						"regions":
						{
						},
						"selection":
						[
							[
								338,
								338
							]
						],
						"settings":
						{
							"syntax": "Packages\\Better JavaScript\\JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1508,
						"regions":
						{
						},
						"selection":
						[
							[
								989,
								989
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2709,
						"regions":
						{
						},
						"selection":
						[
							[
								298,
								298
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 751,
						"regions":
						{
						},
						"selection":
						[
							[
								187,
								187
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/entities.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11325,
						"regions":
						{
						},
						"selection":
						[
							[
								4225,
								4225
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2430.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/components.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10035,
						"regions":
						{
						},
						"selection":
						[
							[
								7574,
								7574
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4362.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/CS.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5189,
						"regions":
						{
						},
						"selection":
						[
							[
								217,
								217
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/system.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10475,
						"regions":
						{
						},
						"selection":
						[
							[
								994,
								994
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/window.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3379,
						"regions":
						{
						},
						"selection":
						[
							[
								166,
								166
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		},
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 9,
					"file": "include/entities.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 320,
						"regions":
						{
						},
						"selection":
						[
							[
								202,
								202
							]
						],
						"settings":
						{
							"auto_name": "#ifndef ENTITIES_H",
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "include/window.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2826,
						"regions":
						{
						},
						"selection":
						[
							[
								858,
								858
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 118.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "include/system.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1405,
						"regions":
						{
						},
						"selection":
						[
							[
								286,
								91
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "include/CS.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1563,
						"regions":
						{
						},
						"selection":
						[
							[
								598,
								598
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 324.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "include/components.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3744,
						"regions":
						{
						},
						"selection":
						[
							[
								961,
								961
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 678.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.524495677233,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 257.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"output.unsaved_changes":
	{
		"height": 100.0
	},
	"project": "project.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"ex",
				"src\\example.i"
			],
			[
				"com",
				"src\\components.cpp"
			],
			[
				"cs",
				"include\\CS.h"
			],
			[
				"comp",
				"C:\\Users\\Omar\\Desktop\\SFMLTEST\\src\\components.hpp"
			],
			[
				"",
				"src\\main.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 661.0,
		"selected_items":
		[
			[
				"",
				"/C/dev/SDLTEST/project.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 173.0,
		"selected_items":
		[
			[
				"ini",
				"Init"
			],
			[
				"inti",
				"Init"
			],
			[
				"",
				"update"
			],
			[
				"out",
				"outOfBounds"
			],
			[
				"draw",
				"Draw"
			]
		],
		"width": 392.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 185.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
