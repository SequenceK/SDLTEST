{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"reset",
				"resetVel"
			],
			[
				"move",
				"moveCS"
			],
			[
				"movem",
				"movement"
			],
			[
				"curre",
				"currentIt"
			],
			[
				"st",
				"std::cout"
			],
			[
				"spri",
				"spriteC"
			],
			[
				"std",
				"std::endl"
			],
			[
				"ve",
				"vel"
			],
			[
				"MO",
				"MoveComponent"
			],
			[
				"edg",
				"edgeCheckerUpdate"
			],
			[
				"ove",
				"overlaped"
			],
			[
				"overla",
				"overlaped"
			],
			[
				"grou",
				"groups"
			],
			[
				"collided",
				"collided"
			],
			[
				"typ",
				"typeinfo"
			],
			[
				"Func",
				"FuncQComponent"
			],
			[
				"Prop",
				"PropertiesComponent"
			],
			[
				"dele",
				"deletedEntities"
			],
			[
				"hold",
				"holdFace"
			],
			[
				"hodl",
				"holdFace"
			],
			[
				"hol",
				"holdFace"
			],
			[
				"bool",
				"boolProps"
			],
			[
				"Sprite",
				"SpriteComponent"
			],
			[
				"sh",
				"shootTimer"
			],
			[
				"Time",
				"Timer::elapsed"
			],
			[
				"shoo",
				"shootTimer"
			],
			[
				"he",
				"height"
			],
			[
				"mo",
				"moveCS"
			],
			[
				"collisio",
				"collision"
			],
			[
				"collis",
				"collisionCS"
			],
			[
				"coll",
				"collidedWith"
			],
			[
				"col",
				"collisionCS"
			],
			[
				"coli",
				"collided"
			],
			[
				"updat",
				"updatePosition"
			],
			[
				"fla",
				"false"
			],
			[
				"fa",
				"false"
			],
			[
				"sho",
				"shooting"
			],
			[
				"stin",
				"stringProps"
			],
			[
				"strin",
				"string"
			],
			[
				"fist",
				"firstColl"
			],
			[
				"string",
				"std::string"
			],
			[
				"max",
				"maxAreaID"
			],
			[
				"collid",
				"collidedWith"
			],
			[
				"che",
				"checking"
			],
			[
				"set",
				"setScale"
			],
			[
				"collide",
				"collided"
			],
			[
				"f",
				"fProps"
			],
			[
				"pro",
				"propCS"
			],
			[
				"delet",
				"deleteEntity"
			],
			[
				"el",
				"elapsed"
			],
			[
				"spr",
				"spriteCS"
			],
			[
				"bu",
				"bulletUpdate"
			],
			[
				"playe",
				"playerUpdate"
			],
			[
				"spi",
				"spriteCS"
			],
			[
				"Fun",
				"FuncQComponent"
			],
			[
				"Ev",
				"SDL_Event"
			],
			[
				"vec",
				"vector	std::vector"
			],
			[
				"fol",
				"followE"
			],
			[
				"cure",
				"currentAnimation"
			],
			[
				"frame",
				"frames"
			],
			[
				"mov",
				"moveCS"
			],
			[
				"pla",
				"playerAnimationUpdate"
			],
			[
				"player",
				"playerAnimationUpdate"
			],
			[
				"functio",
				"functions"
			],
			[
				"CAme",
				"Camera"
			],
			[
				"win",
				"winSize"
			],
			[
				"Vec",
				"Vec2"
			],
			[
				"foll",
				"follow"
			],
			[
				"came",
				"cameras"
			],
			[
				"foo",
				"followC"
			],
			[
				"Came",
				"Camera"
			],
			[
				"follo",
				"followC"
			],
			[
				"game",
				"gamePos"
			],
			[
				"fl",
				"SDL_FLIP_HORIZONTAL"
			],
			[
				"fli",
				"SDL_FLIP_NONE"
			],
			[
				"clip",
				"clipRect"
			],
			[
				"SDL_fl",
				"SDL_FLIP_HORIZONTAL"
			],
			[
				"area",
				"area"
			],
			[
				"are",
				"area"
			],
			[
				"SDL_I",
				"SDL_IntersectRect"
			],
			[
				"creat",
				"createID"
			],
			[
				"crea",
				"createCamera"
			],
			[
				"Move",
				"MoveComponent"
			],
			[
				"img",
				"imgRect"
			],
			[
				"collision",
				"collisionCS"
			],
			[
				"end",
				"endl"
			],
			[
				"maxv",
				"maxV"
			],
			[
				"SDL_",
				"SDL_FLIP_NONE"
			],
			[
				"sprit",
				"spriteCS"
			],
			[
				"SDL_RE",
				"SDL_Rect"
			],
			[
				"maxare",
				"maxAreaID"
			],
			[
				"maxar",
				"maxAreaID"
			],
			[
				"maxid",
				"maxAreaID"
			],
			[
				"maxAre",
				"maxArea"
			],
			[
				"colid",
				"collidingWith"
			],
			[
				"moc",
				"moveC"
			],
			[
				"dx",
				"dx2"
			],
			[
				"dy",
				"dy2"
			],
			[
				"ac",
				"acc"
			],
			[
				"maxa",
				"maxArea"
			],
			[
				"colli",
				"collided"
			],
			[
				"moce",
				"moveCS"
			],
			[
				"flo",
				"float"
			],
			[
				"abs",
				"absDX2"
			],
			[
				"ab",
				"absDX1"
			],
			[
				"abd",
				"absDY2"
			],
			[
				"abds",
				"absDY1"
			],
			[
				"overl",
				"overlap"
			],
			[
				"over",
				"overlapX"
			],
			[
				"overa",
				"overlapY"
			],
			[
				"dra",
				"drag"
			],
			[
				"place",
				"placeholderVel"
			],
			[
				"Xinc",
				"Xincreased2"
			],
			[
				"xin",
				"Xincreased1"
			],
			[
				"cou",
				"cout"
			],
			[
				"no",
				"NONE"
			],
			[
				"COL",
				"CollisionComponent"
			],
			[
				"create",
				"createBox"
			],
			[
				"gri",
				"grid"
			],
			[
				"SDL_q",
				"SDL_QueryTexture"
			],
			[
				"Tim",
				"Timer::elapsed"
			],
			[
				"Wnd",
				"Window::RenderText"
			],
			[
				"act",
				"activeIndexes"
			],
			[
				"gr",
				"gridW"
			],
			[
				"grid",
				"grid"
			],
			[
				"index",
				"index"
			],
			[
				"h",
				"h"
			],
			[
				"G",
				"GAMEOVER"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/myMake.sublime-build",
			"settings":
			{
				"buffer_size": 441,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 699,
				"line_ending": "Windows"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 134,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 2396,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/entities.cpp",
			"settings":
			{
				"buffer_size": 10494,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/entities.h",
			"settings":
			{
				"buffer_size": 320,
				"line_ending": "Windows",
				"name": "#ifndef ENTITIES_H"
			}
		},
		{
			"file": "src/components.cpp",
			"settings":
			{
				"buffer_size": 9874,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/components.h",
			"settings":
			{
				"buffer_size": 3502,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/CS.cpp",
			"settings":
			{
				"buffer_size": 4517,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 9 files for \"spriteCS\"\n\nC:\\dev\\SDLTEST\\src\\components.cpp:\n  361  \n  362  SpriteComponent* CS::getSpriteC(eId e){\n  363: 	if(spriteCS[e] != nullptr){\n  364: 		return spriteCS[e];\n  365  	} else {\n  366  		throw \"spirte component not found\";\n\nC:\\dev\\SDLTEST\\src\\CS.cpp:\n   14  eId CS::_C_INDEX{0};\n   15  std::map<eId, MoveComponent*> CS::moveCS{};\n   16: std::map<eId, SpriteComponent*> CS::spriteCS{};\n   17  std::map<eId, ControllerComponent*> CS::controllerCS{};\n   18  std::map<eId, CollisionComponent*> CS::collisionCS{};\n   ..\n   42  void CS::clear(){\n   43  	CS::moveCS.clear();\n   44: 	CS::spriteCS.clear();\n   45  	CS::controllerCS.clear();\n   46  	CS::collisionCS.clear();\n   ..\n  144  	}\n  145  	CS::collisionUpdate();\n  146: 	for(auto it = spriteCS.begin(); it != spriteCS.end(); it++){\n  147  		it->second->update();\n  148  	}\n  ...\n  159  void CS::draw(){\n  160  \n  161: 	for(auto it = spriteCS.begin(); it != spriteCS.end(); it++){		\n  162  		if(cameras.size()>0){\n  163  			for(auto cIt = cameras.begin(); cIt != cameras.end(); cIt++)\n  ...\n  178  void CS::deleteEntity(eId id){\n  179  	CS::moveCS.erase(id);\n  180: 	CS::spriteCS.erase(id);\n  181  	CS::controllerCS.erase(id);\n  182  	CS::collisionCS.erase(id);\n\nC:\\dev\\SDLTEST\\src\\entities.cpp:\n    8  void playerUpdate(eId id){		\n    9  	if(CS::moveCS[id]->vel.y > 0 && !(CS::collisionCS[id]->touching & FLOOR)){\n   10: 		CS::spriteCS[id]->playAnimation(std::vector<int>{6}, 8, false, true);\n   11  	}\n   12  	else if(CS::moveCS[id]->vel.y < 0){\n   13: 		CS::spriteCS[id]->playAnimation(std::vector<int>{5}, 8, false, true);		\n   14  	}\n   15  	else {\n   16  		if(CS::moveCS[id]->vel.x == 0){\n   17: 			CS::spriteCS[id]->playAnimation(std::vector<int>{0}, 8, false, true);\n   18  		}\n   19  		else {\n   20: 			CS::spriteCS[id]->playAnimation(std::vector<int>{1,2,3,4}, 8, false);\n   21  		}\n   22  	}\n   ..\n   39  			case SDLK_d:\n   40  				if(!holdFace)\n   41: 					CS::spriteCS[id]->facing = RIGHT;\n   42  				CS::moveCS[id]->acc.x = SPEED;break;\n   43  			case SDLK_a:\n   44  				if(!holdFace)\n   45: 					CS::spriteCS[id]->facing = LEFT;\n   46  				CS::moveCS[id]->acc.x = -SPEED;break;\n   47  			case SDLK_SPACE:\n   ..\n  114  	eId id = CS::createEntityID();\n  115  	CS::moveCS[id] = new MoveComponent(pos.x,\n  116: 		pos.y + CS::spriteCS[oid]->imgRect.h/2, id);\n  117  	CS::moveCS[id]->drag = {0,0};\n  118  	CS::moveCS[id]->maxV = {10, 10};\n  ...\n  120  	float speed = 10;\n  121  	f *= -1;\n  122: 	if(CS::spriteCS[oid]->facing == RIGHT){\n  123  		CS::moveCS[id]->acc.x = speed;\n  124: 		CS::moveCS[id]->pos.x += CS::spriteCS[oid]->imgRect.w;\n  125  	}\n  126  	else{\n  ...\n  128  		CS::moveCS[id]->pos.x -= 20;\n  129  	}\n  130: 	CS::spriteCS[id] = new SpriteComponent(\"../data/hello.png\", CS::moveCS, id);\n  131: 	CS::spriteCS[id]->setScale(0.25, 0.1);\n  132: 	CS::spriteCS[id]->setColor(255, 0, 0);\n  133  	CS::propCS[id] = new PropertiesComponent(id);\n  134  	CS::propCS[id]->entities[\"shooter\"] = oid;\n  ...\n  139  	void (*Func)(eId) = bulletUpdate;\n  140  	CS::funcQCS[id]->add(Func);\n  141: 	CS::collisionCS[id] = new CollisionComponent(CS::spriteCS,CS::moveCS,id,false);\n  142  	CS::collisionCS[id]->moveable = false;\n  143  	//CS::collisionCS[id]->debugDraw = true;\n  ...\n  150  	eId id = CS::createEntityID();\n  151  	CS::moveCS[id] = new MoveComponent(x, y, id);\n  152: 	CS::spriteCS[id] = new SpriteComponent(\"../data/player.png\", CS::moveCS, id);\n  153  	//CS::controllerCS[id] = new ControllerComponent(CS::moveCS, id);\n  154  	CS::propCS[id] = new PropertiesComponent(id);\n  ...\n  161  	CS::funcQCS[id]->add(pFunc);\n  162  	CS::funcQCS[id]->addEventFunc(pUpdate);\n  163: 	CS::spriteCS[id]->setScale(2,2);\n  164: 	CS::spriteCS[id]->setFrame(30,27);\n  165  	// std::vector<int> f = {1,2,3,4};\n  166: 	// CS::spriteCS[id]->playAnimation(f, 8, true);\n  167  	CS::moveCS[id]->maxV = {5,15};\n  168  	CS::moveCS[id]->drag = {0.5,0.1};\n  169: 	CS::collisionCS[id] = new CollisionComponent(CS::spriteCS,CS::moveCS,id,true);\n  170  	CS::collisionCS[id]->moveable = true;\n  171  	CS::moveCS[id]->acc.y = 1;\n  ...\n  185  	}\n  186  	if(CS::moveCS[id]->vel > 0){\n  187: 		CS::spriteCS[id]\n  188  	}\n  189  }\n  ...\n  223  	eId id = CS::createEntityID();\n  224  	CS::moveCS[id] = new MoveComponent(x, y, id);\n  225: 	CS::spriteCS[id] = new SpriteComponent(\"../data/player.png\", CS::moveCS, id);\n  226: 	CS::spriteCS[id]->setScale(2,2);\n  227: 	CS::spriteCS[id]->setFrame(30,27);\n  228  	std::vector<int> f = {1,2,3,4};\n  229: 	CS::spriteCS[id]->playAnimation(f, 8, true);\n  230  \n  231  	CS::moveCS[id]->maxV = {5,15};\n  ...\n  233  	CS::moveCS[id]->acc = {1, 1};\n  234  \n  235: 	CS::collisionCS[id] = new CollisionComponent(CS::spriteCS,CS::moveCS,id,true);\n  236  	CS::collisionCS[id]->moveable = true;\n  237  \n  ...\n  250  	eId id = CS::createEntityID();\n  251  	CS::moveCS[id] = new MoveComponent(x, y, id);\n  252: 	CS::spriteCS[id] = new SpriteComponent(\"../data/hello.png\", CS::moveCS, id);\n  253  	//CS::moveCS[id]->vel.y = sin(rand()%361)*CS::moveCS[id]->maxV.y;\n  254  	//CS::moveCS[id]->vel.x = cos(rand()%361)*CS::moveCS[id]->maxV.x;\n  255  	//CS::moveCS[id]->maxV = {3,3};\n  256: 	//CS::spriteCS[id]->setScale(0.2,0.2);\n  257: 	CS::collisionCS[id] = new CollisionComponent(CS::spriteCS,CS::moveCS,id,true);\n  258  	CS::collisionCS[id]->moveable = false;\n  259  	//CS::collisionCS[id]->debugDraw = true;\n  ...\n  266  	eId id = CS::createEntityID();\n  267  	CS::moveCS[id] = new MoveComponent(0, 0, id);\n  268: 	CS::spriteCS[id] = new SpriteComponent(\"../data/gameover.bmp\", CS::moveCS, id);\n  269  \n  270  \n\n37 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 5623,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "include/CS.h",
			"settings":
			{
				"buffer_size": 1217,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/system.cpp",
			"settings":
			{
				"buffer_size": 10427,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Omar/Desktop/SFMLTEST/src/system.cpp",
			"settings":
			{
				"buffer_size": 13010,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/window.cpp",
			"settings":
			{
				"buffer_size": 3355,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/system.h",
			"settings":
			{
				"buffer_size": 1404,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/window.h",
			"settings":
			{
				"buffer_size": 2835,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/myMake.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"pa",
				"Package Control: Remove Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"pac",
				"Package Control: Enable Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"cle",
				"Build: Clean"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"clea",
				"Build: Clean"
			],
			[
				"clean",
				"Build: Clean"
			]
		],
		"width": 664.0
	},
	"console":
	{
		"height": 371.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/dev/SDLTEST",
		"/C/dev/SDLTEST/bin",
		"/C/dev/SDLTEST/data",
		"/C/dev/SDLTEST/obj",
		"/C/dev/SDLTEST/src"
	],
	"file_history":
	[
		"/C/dev/SDLTEST/bin/terminal.glue",
		"/C/dev/SDLTEST/data/player.png",
		"/C/dev/SDLTEST/include/cleanup.h",
		"/C/dev/SDLTEST/src/54dab505-fca9-4088-864e-1d5afaeb74ef.dmp",
		"/C/dev/SDLTEST/5b408044-22d4-46d4-b960-9fe790b6acb4.dmp",
		"/C/dev/SDLTEST/project.sublime-project",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/JSON.sublime-settings",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/C/Users/Omar/Desktop/SFMLTEST/src/components.hpp",
		"/C/Users/Omar/Desktop/SFMLTEST/deleted",
		"/C/dev/SDLTEST/data/fonts/FONTLOG.txt",
		"/C/dev/SDLTEST/bin/LICENSE.tiff.txt",
		"/C/Users/Omar/Desktop/SFMLTEST/src/game.cpp",
		"/C/Users/Omar/Desktop/SFMLTEST/src/deleted controls code in update().txt",
		"/C/Users/Omar/Desktop/smart sweepers - v1.0/main.cpp",
		"/C/Users/Omar/Desktop/smart sweepers - v1.0/CMinesweeper.cpp",
		"/C/Users/Omar/Desktop/smart sweepers - v1.0/Script1.aps",
		"/C/Users/Omar/Desktop/smart sweepers - v1.0/Script1.rc",
		"/C/Users/Omar/Desktop/SFMLTEST/src/system.cpp",
		"/C/dev/SDLTEST/src/main.cpp",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/C++.sublime-settings",
		"/C/dev/SDLTEST/20e9789b-f58a-439b-8b8d-3411319382ce.dmp",
		"/C/dev/SDLTEST/fd8ca7fb-a8dc-40e7-9764-a500df7a3066.dmp",
		"/C/dev/SDLTEST/README.md",
		"/C/dev/SDLTEST/src/game.cpp",
		"/C/dev/SDLTEST/include/system.h",
		"/C/dev/SDLTEST/data/hello.png",
		"/C/dev/SDLTEST/bin/LICENSE.jpeg.txt",
		"/C/dev/SDLTEST/data/gameover.bmp",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/myMake.sublime-build",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/Makefile/Make.sublime-build",
		"/C/Program Files (x86)/Sublime Text 2/Pristine Packages/Makefile.sublime-package",
		"/C/Program Files/Sublime Text 3/Packages/Makefile.sublime-package",
		"/C/dev/SDLTEST/src/window.cpp",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/clang_format_custom.sublime-settings",
		"/C/dev/SDLTEST/include/window.h",
		"/C/dev/SDLTEST/src/DELETED.cpp",
		"/C/dev/SDLTEST/include/game.h",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/User/myMake.sublime-build",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/User/mingw32-make.sublime-build",
		"/C/dev/SDLTEST/src/game.h",
		"/C/dev/SDLTEST/src/cleanup.h",
		"/C/dev/SDLTEST/src/window.h",
		"/C/dev/SDLTEST/src/Makefile",
		"/C/dev/SDLTEST/Makefile",
		"/C/mathart.cpp",
		"/C/MathPic.ppm",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/User/Distraction Free.sublime-settings",
		"/C/Users/Omar/Desktop/SFMLTEST/main.cpp",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/User/SFML2_C++.sublime-build",
		"/C/Users/Omar/myApp/game.js",
		"/C/Users/Omar/Desktop/SFMLTEST/build&run.bat",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/C++/C++.sublime-build",
		"/C/Users/Omar/Desktop/SFMLTEST/compile.sh",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/User/clangSFML.sublime-build",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Omar/AppData/Roaming/Sublime Text 2/Packages/C++/old_C++.sublime-build",
		"/C/Users/Omar/Desktop/EULER/P18.py",
		"/C/Users/Omar/Desktop/P18.py",
		"/C/Users/Omar/Desktop/htmlTest/test.html",
		"/C/Users/Omar/Desktop/htmlTest/scripts/app.js",
		"/C/Users/Omar/Desktop/craftyTest.html"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\dev\\SDLTEST\\src",
			"C:\\dev\\SDLTEST\\include",
			"C:\\dev\\SDLTEST\\src",
			"C:\\dev\\SDLTEST\\bin"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"spriteCS",
			"moveCS[id]",
			"timer",
			"el",
			"elaps",
			"moveC",
			"funcQ",
			"funcQS",
			"Vec2<float>",
			"imgRect",
			"{\n",
			"x",
			"w",
			"x",
			"_INDEX",
			"x",
			"BIAS",
			"width",
			"rect",
			"acc",
			"collidingWith",
			"2",
			"x",
			"1",
			"c1->moveC->pos.x > c1->moveC->deltaPos.x",
			"maxV",
			"rect.",
			"w",
			"x",
			"spee",
			"gridH",
			"gridW",
			"gridY",
			"gridX",
			"it",
			"x",
			"w",
			"x",
			"1",
			"auto",
			"x",
			"depth < maxDepth",
			"QTs.size() > 0",
			"int",
			"r.",
			"Vec2<float>",
			"maxVel",
			"maxVel.y",
			"maxVel.x",
			"%10",
			"x",
			"->vec",
			"vec",
			"->x",
			"->y",
			"vx",
			"vy",
			"CSys",
			"test",
			"CSys::moveCS[test]",
			"[1]",
			"1",
			".map",
			"map",
			"1",
			"game.exe"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"COMP[moveC][id]",
			"CS::moveCS[id]",
			"Vec2",
			"result",
			"y",
			"h",
			"y",
			"_E_INDEX",
			"y",
			"w",
			"r",
			"vel",
			"1",
			"y",
			"2",
			"Xincreased",
			"moveC->pos.",
			"h",
			"y",
			"bounds.h",
			"bounds.w",
			"bounds.y",
			"bounds.x",
			"checking",
			"y",
			"h",
			"yh",
			"y",
			"2",
			"it-first",
			"unsigned int",
			"y",
			"QTs[0] != nullptr",
			"unsigned int",
			"auto",
			"r->",
			"Vec2f",
			"maxV",
			"mVy",
			"mVx",
			"/RAND_MAX",
			"y",
			"->vel",
			"vel",
			"->pos.x",
			"->pos.y",
			"vec.x",
			"vec.y",
			"CS",
			"id",
			"moveC",
			"[test]",
			"",
			"SPEED"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/Omar/AppData/Roaming/Sublime Text 3/Packages/User/myMake.sublime-build",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 441,
						"regions":
						{
						},
						"selection":
						[
							[
								211,
								211
							]
						],
						"settings":
						{
							"syntax": "Packages\\Better JavaScript\\JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 699,
						"regions":
						{
						},
						"selection":
						[
							[
								653,
								653
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 134,
						"regions":
						{
						},
						"selection":
						[
							[
								99,
								99
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2396,
						"regions":
						{
						},
						"selection":
						[
							[
								638,
								638
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 456.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/entities.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10494,
						"regions":
						{
						},
						"selection":
						[
							[
								7265,
								7265
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4034.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "include/entities.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 320,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"auto_name": "#ifndef ENTITIES_H",
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"file": "data/player.png",
					"semi_transient": true,
					"stack_index": 2,
					"type": "image"
				},
				{
					"buffer": 6,
					"file": "src/components.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9874,
						"regions":
						{
						},
						"selection":
						[
							[
								8653,
								8653
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6314.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "include/components.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3502,
						"regions":
						{
						},
						"selection":
						[
							[
								765,
								765
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 810.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/CS.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4517,
						"regions":
						{
						},
						"selection":
						[
							[
								3140,
								3140
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2248.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5623,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										135,
										143
									],
									[
										176,
										184
									],
									[
										401,
										409
									],
									[
										608,
										616
									],
									[
										762,
										770
									],
									[
										786,
										794
									],
									[
										910,
										918
									],
									[
										934,
										942
									],
									[
										1147,
										1155
									],
									[
										1404,
										1412
									],
									[
										1537,
										1545
									],
									[
										1685,
										1693
									],
									[
										1792,
										1800
									],
									[
										1949,
										1957
									],
									[
										2091,
										2099
									],
									[
										2312,
										2320
									],
									[
										2488,
										2496
									],
									[
										2599,
										2607
									],
									[
										2715,
										2723
									],
									[
										2800,
										2808
									],
									[
										2847,
										2855
									],
									[
										3128,
										3136
									],
									[
										3366,
										3374
									],
									[
										3671,
										3679
									],
									[
										3712,
										3720
									],
									[
										3801,
										3809
									],
									[
										3980,
										3988
									],
									[
										4157,
										4165
									],
									[
										4300,
										4308
									],
									[
										4386,
										4394
									],
									[
										4427,
										4435
									],
									[
										4510,
										4518
									],
									[
										4707,
										4715
									],
									[
										4902,
										4910
									],
									[
										5177,
										5185
									],
									[
										5267,
										5275
									],
									[
										5504,
										5512
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "include/CS.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1217,
						"regions":
						{
						},
						"selection":
						[
							[
								583,
								583
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 25.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/system.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10427,
						"regions":
						{
						},
						"selection":
						[
							[
								386,
								386
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 342.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/C/Users/Omar/Desktop/SFMLTEST/src/system.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13010,
						"regions":
						{
						},
						"selection":
						[
							[
								3550,
								3555
							]
						],
						"settings":
						{
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3002.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "src/window.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3355,
						"regions":
						{
						},
						"selection":
						[
							[
								848,
								848
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 513.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "include/system.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1404,
						"regions":
						{
						},
						"selection":
						[
							[
								16,
								16
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "include/window.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2835,
						"regions":
						{
						},
						"selection":
						[
							[
								2727,
								2727
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 544.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 257.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"output.unsaved_changes":
	{
		"height": 100.0
	},
	"project": "project.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"com",
				"src\\components.cpp"
			],
			[
				"cs",
				"include\\CS.h"
			],
			[
				"comp",
				"C:\\Users\\Omar\\Desktop\\SFMLTEST\\src\\components.hpp"
			],
			[
				"",
				"src\\main.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 661.0,
		"selected_items":
		[
			[
				"",
				"/C/dev/SDLTEST/project.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"",
				"update"
			],
			[
				"out",
				"outOfBounds"
			],
			[
				"draw",
				"Draw"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 185.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
